{"version":3,"sources":["../../../../server/api/reports/reports.model.js"],"names":[],"mappings":"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","file":"reports.model.js","sourcesContent":["'use strict';\n\nimport crypto from 'crypto';\nvar mongoose = require('bluebird').promisifyAll(require('mongoose'));\nimport {Schema} from 'mongoose';\n\nvar UserSchema = new Schema({\n\tfirstname: String,\n\tlastname: String,\n\temail: {\n\t\ttype: String,\n\t\tlowercase: true\n\t},\n\trole: {\n\t\ttype: String,\n\t\tdefault: 'user'\n\t},\n\tcover_image_url\t\t: String,\n\tpassword\t\t\t: String,\n\tprovider\t\t\t: String,\n\tsalt\t\t\t\t: String,\n\taddress1\t\t\t: String,\n\taddress2\t\t\t: String,\n\tcity\t\t\t\t: String,\n\tstate\t\t\t\t: String,\n\tzip\t\t\t\t\t: Number,\n\tphone\t\t\t\t: String,\n\talt_phone\t\t\t: String,\n\tnetworks\t\t\t: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Network' }],\n\tpharmacies\t\t\t: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Pharmacy' }],\n\tstores\t\t\t\t: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Store' }]\n});\n\n/**\n * Virtuals\n */\n\n// Public profile information\nUserSchema\n\t.virtual('profile')\n\t.get(function() {\n\t\treturn {\n\t\t\t'name'\t\t\t\t: this.firstname,\n\t\t\t'email'\t\t\t\t: this.email,\n\t\t\t'social_networks'\t: this.social_networks,\n\t\t\t'role'\t\t\t\t: this.role\n\t\t};\n\t});\n\n// Non-sensitive info we'll be putting in the token\nUserSchema\n\t.virtual('token')\n\t.get(function() {\n\t\treturn {\n\t\t\t'_id': this._id,\n\t\t\t'role': this.role\n\t\t};\n\t});\n\n/**\n * Validations\n */\n\n// Validate empty email\nUserSchema\n  .path('email')\n  .validate(function(email) {\n    return email.length;\n  }, 'Email cannot be blank');\n\n// Validate empty password\nUserSchema\n  .path('password')\n  .validate(function(password) {\n    return password.length;\n  }, 'Password cannot be blank');\n\n// Validate email is not taken\nUserSchema\n  .path('email')\n  .validate(function(value, respond) {\n    var self = this;\n    return this.constructor.findOneAsync({ email: value })\n      .then(function(user) {\n        if (user) {\n          if (self.id === user.id) {\n            return respond(true);\n          }\n          return respond(false);\n        }\n        return respond(true);\n      })\n      .catch(function(err) {\n        throw err;\n      });\n  }, 'The specified email address is already in use.');\n\nvar validatePresenceOf = function(value) {\n  return value && value.length;\n};\n\n/**\n * Pre-save hook\n */\nUserSchema\n  .pre('save', function(next) {\n    // Handle new/update passwords\n    if (!this.isModified('password')) {\n      return next();\n    }\n\n    if (!validatePresenceOf(this.password)) {\n      next(new Error('Invalid password'));\n    }\n\n    // Make salt with a callback\n    this.makeSalt((saltErr, salt) => {\n      if (saltErr) {\n        next(saltErr);\n      }\n      this.salt = salt;\n      this.encryptPassword(this.password, (encryptErr, hashedPassword) => {\n        if (encryptErr) {\n          next(encryptErr);\n        }\n        this.password = hashedPassword;\n        next();\n      });\n    });\n  });\n\n/**\n * Methods\n */\nUserSchema.methods = {\n\t/**\n\t* Authenticate - check if the passwords are the same\n\t*\n\t* @param {String} password\n\t* @param {Function} callback\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tauthenticate( password, callback ) {\n\t\tif ( !callback ) {\n\t\t\treturn this.password === this.encryptPassword( password );\n\t\t}\n\n\t\tthis.encryptPassword(password, ( err, pwdGen ) => {\n\t\t\tif ( err ) {\n\t\t\t\treturn callback( err );\n\t\t\t}\n\n\t\t\tif ( this.password === pwdGen ) {\n\t\t\t\tcallback( null, true );\n\t\t\t} else {\n\t\t\t\tcallback( null, false );\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t* Make salt\n\t*\n\t* @param {Number} byteSize Optional salt byte size, default to 16\n\t* @param {Function} callback\n\t* @return {String}\n\t* @api public\n\t*/\n\tmakeSalt( byteSize, callback ) {\n\t\tvar defaultByteSize = 16;\n\n\t\tif ( typeof arguments[ 0 ] === 'function' ) {\n\t\t\tcallback = arguments[ 0 ];\n\t\t\tbyteSize = defaultByteSize;\n\t\t} else if ( typeof arguments[ 1 ] === 'function' ) {\n\t\t\tcallback = arguments[ 1 ];\n\t\t}\n\n\t\tif ( !byteSize ) {\n\t\t\tbyteSize = defaultByteSize;\n\t\t}\n\n\t\tif ( !callback ) {\n\t\t\treturn crypto.randomBytes( byteSize ).toString(Â 'base64' );\n\t\t}\n\n\t\treturn crypto.randomBytes( byteSize, ( err, salt ) => {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t} else {\n\t\t\t\tcallback( null, salt.toString( 'base64' ) );\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t* Encrypt password\n\t*\n\t* @param {String} password\n\t* @param {Function} callback\n\t* @return {String}\n\t* @api public\n\t*/\n\tencryptPassword( password, callback ) {\n\t\tif ( !password || !this.salt ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar defaultIterations = 10000;\n\t\tvar defaultKeyLength = 64;\n\t\tvar salt = new Buffer( this.salt, 'base64' );\n\n\t\tif ( !callback ) {\n\t\t\treturn crypto\n\t\t\t\t\t\t.pbkdf2Sync( password, salt, defaultIterations, defaultKeyLength )\n\t\t\t\t\t\t.toString( 'base64' );\n\t\t}\n\n\t\treturn crypto.pbkdf2( password, salt, defaultIterations, defaultKeyLength, ( err, key ) => {\n\t\t\tif ( err ) {\n\t\t\t\tcallback( err );\n\t\t\t} else {\n\t\t\t\tcallback( null, key.toString( 'base64' ) );\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport default mongoose.model( 'Reports', UserSchema );\n"]}