{"version":3,"sources":["../../../../server/api/plan/plan.controller.js"],"names":[],"mappings":"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","file":"plan.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/plans              ->  index\n * POST    /api/plans              ->  create\n * GET     /api/plans/:id          ->  show\n * PUT     /api/plans/:id          ->  update\n * DELETE  /api/plans/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nvar Auth = require('../../auth/auth.service');\nvar Plan = require('./plan.model');\nvar Template = require('../template/template.model');\n\n\n//db.templates.find().sort({updated_at: -1}).limit(1)\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\nfunction responseWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.saveAsync()\n      .spread(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.removeAsync()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\n// Gets a list of Plans (for the current user)\nexport function index(req, res) {\n    Plan.findAsync({_author_id: req.user._id})\n    .then(responseWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Plan from the DB\nexport function show(req, res) {\n  Plan.findOne({_id: req.params.id})\n  .populate({\n    path: 'sections',\n    model: 'PlanSection',\n    populate:  [{ path: 'focusItems', model: 'FocusItem' },\n                { path: 'addendums', model: 'Addendum' }]\n  })\n  .then(handleEntityNotFound(res))\n  .then(responseWithResult(res))\n  .catch(handleError(res));\n}\n\n// Creates a new Plan in the DB\nexport function create(req, res) {\n  Plan.createAsync(req.body)\n    .then(responseWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Plan in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  Plan.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(responseWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Plan from the DB\nexport function destroy(req, res) {\n  Plan.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}